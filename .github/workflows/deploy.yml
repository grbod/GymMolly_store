name: Deploy to Production

on:
  push:
    branches:
      - main
  workflow_dispatch:  # Allow manual triggering

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Deploy to server
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        port: ${{ secrets.SERVER_PORT }}
        script: |
          # Navigate to project directory
          cd /opt/gymmolly
          
          # Pull latest changes
          git pull origin main
          
          # Copy production environment file
          cp backend/.env.production .env
          
          # Build and restart containers
          docker-compose -f docker-compose.prod.yml down
          docker-compose -f docker-compose.prod.yml up -d --build
          
          # Wait for containers to be healthy
          sleep 10
          
          # Check if containers are running
          docker-compose -f docker-compose.prod.yml ps
          
          # Show recent logs
          docker-compose -f docker-compose.prod.yml logs --tail=50

    - name: Health check
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        port: ${{ secrets.SERVER_PORT }}
        script: |
          # Check if frontend is responding
          curl -f http://localhost:3001 || exit 1
          
          # Check if backend API is responding
          curl -f http://localhost:5001/api/inventory || exit 1
          
          echo "Health checks passed!"

    - name: Notify deployment status
      if: always()
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        text: |
          Deployment ${{ job.status }}!
          Commit: ${{ github.sha }}
          Author: ${{ github.actor }}
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
      continue-on-error: true